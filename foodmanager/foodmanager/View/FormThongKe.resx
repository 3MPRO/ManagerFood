<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOwAAADsAXkocb0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAD5klEQVRYR+2V+09bZRjHcRrjH2IYkZhl0UVj4g/GJTB0m24xmRGj0ZiYOXVqoomJpjOY7GJbQEGE
        ZQMm2wqZik4GtNnYKGKhdyjQnt4vhyFlEmi9cPv6Pq/tyTn0dJQu7Kc9yTdpz2mfz+ec57zvKdnqMlhn
        n+mx3zTHg+GlP6MBzMeCawtirDNzemvKYJl9ucMsms9eDf/T3C/APhEDweVZTEQPZ35+5wXgvj4fnjD8
        Pms8czW0RNBsWkxKcDYLYmQy8/fiSgNsMwXxtMmPWqMfURZ8P5iQwFKMAqbDoVyBeDiRaVV4dQL39wfw
        LOvZyIAiQeVRFWAx2uN3JrCUTu9KJP894YotD9hiqy5HfHXKGV8JueMr4lhiZW48sZzyiMvLfY4Z/GiJ
        5eTySBxzkSIF2HwfQDq9yIKNkppWXukt2ef12YzAQ2owtdwTyCdwK+pHz1QfPAGbdO6uCRD827HzeMWi
        gc7duvUCZuEGLk78xJ56P+Y4vIPD37GehC/oLE5g0hOFvmUAH375Cz492YPObhvSyXlVgePO09LVNuSB
        FyxQ/pLmwfLn6k6X7dFje6UyTx1qwtCwL0cgFBrDUZuWg/PBCxbYXqk7R7DHDjZCb7Cj1y7ikjmMt45d
        5hKP7q2H0xFUCFBzkviASRzJA6dsKFBaod9NkCcPNWM0sohwCoqc6rByif1vt2MtpRSg/BHxYSbi5Z9J
        6HNHI7onewoXYM3bCXD2ymQOnBJaBPYdOc8lJtgzsl6AQqsgSCOxfsXH0TbetQmBPXorNXdP/60qQNG0
        DHGB7isuSaB5/AIHetmtD4TceD8Dr3W38ZVRuECl3kLNHfGUKpzyWdMgF/i13y0JtHsuceBhNv/38sAL
        FWii5vVdTlW4f34Fu99s4wIhISEJ0Mbz3fhFDqZoXa1IroMXJlCle5w1X9v5YgNMYzMKeGBhDZ/UX+Pw
        6o8MHC5/BkjiHLsTZzxd0pV7gw7cDP//UBYkUFqh3cEAfxGk/Pl6fFx3Da29U/jmBxf2vXuBw3cdaEBQ
        EHMEssm+C/q9Jrw6cgx17nbp3G0FMvBZgjxSVWvesf9rDpTnBbb8hKm4BM8K+EMuWP3DkkCf18jhr1m+
        wJAwuLGAHF5WqdfSVpwUk+j62Q4d244b28wYtghYTbFZyOBZgRpnM6rZ7GnN98rgN3wDEjyvwHo4Hdvs
        y2hE+A2vj9RwiWqLOlxVQA1OVczrmEbwxmgNh1/3Xc+BUxQCZVXaUgZOEpzlVOYwr2IEKBNBG1yBUQVU
        HoUA2/WOqsGpihWgZFeBWpQj0Gi2lVfoHs58U9TdEbhN3RPYWoGSkv8AYOGnUbLQhZYAAAAASUVORK5C
        YII=
</value>
  </data>
</root>