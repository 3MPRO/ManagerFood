<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAHnJJREFUeF7t3emWrGd5HuAciw/AB5AcQHIAznLiDDYkTiCJh8QJISa2wWBASAIx
        IwHCgBgEAoQEQgIbxIyYJJAQSHvS1p7nQdLvyr6LVVnVXz81du3e3U9fP64FS/V+X3VX9+77e6fn/Sd/
        /dzvjwCA/U2gA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AG
        BDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0A
        GhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0
        AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg
        0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQ
        gEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKAD
        QAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGB
        DgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AG
        BDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0A
        GhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0
        AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg
        0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQ
        gEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKAD
        QAMCHQAaEOgA0IBAB4AGBPoCj599YHTppVOjY1d/OfrR+UdGD52+e/S+o/+zbAsAt4pAn+O+F982euWV
        K6WE/JMXvzUO+DuP/JfyegDYLQJ9jnmBPpQevHAH4FYR6AukJ14F+Dy/vvTE6HMn7irvBwA3g0Bf4IkL
        j5ShvYzT1w6PHjvzydFbD72qvDcAbIpAX+Cjx/+qDOtVpJef4fjq/gCwCQJ9CTvppU/LULw5dgBuBoG+
        hITwOnPpldwnvf7qfQBgXQJ9SQ+fvqcM6HV9/qRFcwBsjkBfQYbMq3Bel1AHYFME+gqyWv3Y1afLcF5X
        KtFV7wUAqxDoK0rZ103Np0/oqQOwUwJ9DUIdgL1GoK9JqAOwlwj0HbgZc+pCHYB1CPQdSqg/dfHxMpzX
        kV6/41kBWJVA35DsU9/UEHzuo6IcAKsQ6BuUEN5Ubz3HsTrUBYBlCfSbIOeon752pAzqVTx58Vvl/QFg
        SKDfRFngttNg//bZL5T3BoBpAn0X5DCWnZzYlh5/dV8AmBDouyhz4um1Z559lQV0eRio7gcAEwL9FkrP
        PavjE/Dz9rProQOwiEDfY7IHPUE/CXt70gFYhkAHgAYE+i2WHvhHbvTGp9l/DsCqBPouSEg/dPru0Y/O
        PzL69aUnRqevHS7nyitpm2ty7WNnPjm+lypyAAwJ9JsgPezPnbhrXBimCulNyCr53D8hP23Sy6++LgD6
        EugblIVs6UlXAXwrTHr3CXqL6wB6E+gbkLBMcFahupekV58Hjk+++Nby+wBg/xLoO5Ch9cfPPlCG516X
        3nvm9S3AA+hBoK8pvfJVFrftVem1Z0i++h4B2D8E+hpSvnWV0q37QR5OVKQD2L8E+ooS5lUgdpE5dsPw
        APuPQF9BerBVCHZz7OovrYrnprrt8H8cb+380YWvjn5z+SejJ85/bfTBY68v2wLLEehLSsB1G2afJ9+r
        UGeT3vjcvx49cPK9o2cvPzF6+ZXL5e/dTy58ffQ2I0SwFoG+pPRaqz9AnQl1NuXvDv3h6NlLPyp/z4Ze
        vPrr0Z2HVUOEVQn0JXz77BfKPzwHwV4L9bc8/4ejDxx93ejDL7zhhv87/t+7j/3l6P1H/9fo7Yf/Q3nN
        Jv3t8/929I7D/3msen3T/ua5fzXusb7zyH8dvfn5f1+22ZQ3PfcHozsOv3b0gWOvG9vU95if2ZErT5W/
        X7PkAbq6FzCbQF8gddOrPzgHSf647oWFcgnT8y+9UH6NE+euHxufL//1M/eNvnzqQ6PPnrhj9N6j/2Mc
        jNU9F7nj8GtG/3D206NnLv1g25TLtZfPj8vv3nv8b8pr1/WZE7ePnrjwyOj41We3DU2fuvb86Gun/35H
        w9Lp/eb++bk+fem7o388+5nRby7/eHT95Qtb3ivyef/w/MOje248OFX3WsYvLn1n233jhavPjL53/sHx
        Zzt8Ld/3m5//d+X9gJpAXyB/+IZ/bA6iVMKrPp/dlHCuvrZlnLt+fBxcb1myl5sHgEdOf2x09eVz5f2G
        sqjr7w79UXmvZb376J+PDl95srz/0LmXjo3+/viby/vMk97y2etHynsu8tyN0F91tOb+E+/adp88ODx8
        +sNb2mVEIA8VkzY/vvDolteBxQT6HPnjNf2HaL8688CrRxcef3v52ioePn1P+TntlifOP1p+Xav49eXF
        DyYJvarXuMihKz8fX1vdc5FPvXjb6MrLZ8v7zpJebB5yqvvNkrK/1b2W9dIrF0cPnbq7vHflxLXfbLvH
        F0++r2wb97349tHHj7+lfA2YT6DP0aV3fuaBV42O3/47o+vHl1uUNEuGnG/l0a0Zbq6+rlWcvPZcee+J
        BPLzV35aXruMZy59v7zvPBlif+mVS+X9FknAZi1Bdd/Kg6c+WN5nVRn2r+4/7T1H//u26/LZVm2BnRPo
        M2TOeDhnul+9fOXF0YkP/dPRyXv/Rfn6KvKQU31eN1sWhA3nkzPsnDDLHHZqBDxw8j3jYfXMC5+9frSc
        E858cHX/iZ9e+Pq2a+Lqjd7zd899afSxF940uv3wa8cL8B4+9ZFxoA7bzuuBDr336F+M5+KH94gsJPvi
        yfeP1wDk/bLwrxqSP3njQWfZ+eZvnv3stut/fvGbo8fOfGL06RffMf56sm7gQ8deP147cOH6iW3tIz+L
        dx35b+V7TFSjAXn/qi2wcwJ9hm5FZK48/cVxL/3yzz5evr6KW9FLf2/R2/vuuQfLthNvfO4PbgTT/xn3
        JlO8JEPi7zg0e+X2/Sfv3PYecfTqL8YhV13z6RPv2Nb+4o0HwWVWpOfre/Hqs9uuT2991rB21gAcvvF9
        DK955PS9Zfuh4bRF5tOrdhMZsfjmjYekagThqwve8yMv/NW2a3564RtlW2DnBPoMHRfDnbrv92701P9Z
        +doqbkUvPQvAhl/H1zd4qEy2bJ2+vv2wnSzUWrSQ7js3eu7D69KzrtpOS09+eF16vouOt83Wsisvn9ly
        XYI5hVuq9tMyJTB9XdYKVO2GPnr8r7eNJBy68rOy7cSbnv8320a5rr9ycfSeo39etgd2RqDP0GW4fVp6
        6ZlPf+nMr8rXV7HbvfRqtXSGiau26/j8iXdvu//568dHtx3647L9tEzPpFc+fe2Rq0+VbadVDxDZble1
        HcrDzPDaZRaTHbv69JZrnrjwtbJdJUPw09em175oO+O3zn5uyzWRh49MH1TtmS9bDnej3gL7k0AvdFnd
        fjOl2E712d0s2VM+/Bq+cuqjZdt1/OrSD7fdPyFfta0Mgys97Xl7xbOve7p9nLp2aKledrzt0Ku39ZiX
        +ZmcGTxE5Dz/ql3lg8f+95Zr4+MLts7ddug/jdcfDK/L2oNfXPr2eEFg6gtU1/JbqbKX0ZzJYs3LL50e
        F1eq2nKwCfRC9xPV5skCuguP3zb+3+r1iRy3Wn12N0vmiIdfQ+qCV21XlR7PcI44BWoyDF+1r1Rz/POO
        o/32ue3VBx889YGy7SxZzDZ9/bErT5ftpg1Hnr6x5IhApDc+fW1kr37VdlreY3jdtEwffOfcF3et+t5+
        kdDOfvyqFsIvbzwMVddwsAn0wkEu9Zrh+CyeW2bf+m6WhH30zCe2vX/2LFdts5ArUwLvO/oXSw2ZV/Pz
        ixbcVYYrwueF3XBhW3r0OYGsajvLcAtaVvVX7aYNV/4vE8gTefCZvjbyYFK1nZYHo+w+WLQ1LyMO3zp3
        /0oPUh2lwNDPL/5j+RlNZOqkupaDTaAXUhWt+kd0UJx96E9Hx9/9uwt76bu5OC4rqofvn9KhWZiVVej5
        /xlOHg5DJyi/fCP4qntOVL3/RQvTKllJP32PbHOr2qUK3XAYep0/0FmoNn2PWDS/ms9juv2ilerTqn3l
        CeqqbSUPWAmq4dcwlO16qV1f3aOzVBrMg+S8B5/83qTXfteRPy3vwcEm0AvVP6SDZNJLv/TD95evT+zm
        ARrZxlV9DctI2dfqnhPZmz68ZtEe60rquk/fI+FVtbv98Gu2tIsfn3+sbDtP9owP75M961XbiWEPPXvp
        q3aVjIhMXxtZ21C1nSdhnf3os/a4R35mBy20qnUcE1lkef+JO2/6AT3sbwJ9oJon3M/WXdGe1fDLbHFb
        tMp5U7INrHr/ZWQRUXXPiZ9d/Idt12SPeNV2nuEhJJnjrtpVPd2sIK/azpOV4sP7ZC6/ajuRz2K6/TIV
        3yZ+eP4rW66NnHZXtV1GFsN94eR7x4fQDO8b2aN/kALsTFFjPw+JGYlZ93AhDhaBPvDR49uLYexXq8yH
        D6UATa5d9EAwb+HXJq0b6FlNnfn36p4Tz1zeujc7w/ZVu0VSuGb6PrMOGEmxm+l2scrQ98THXvjbbfd5
        15E/KdtOZCvedPuszq/aDWUv/sWXTm65Nlv1NjHfnbDKjoVqKD5FbaprOso58NPf++dO3FW2g1kE+kC3
        CnHj+fAbwbxqHfcEeUJ90Tz6bm1fqwI9q7ozrJ1yrZEqaAmor5z+8Oj+E+8cl4VdZgTh2cvb10ysc3Tn
        MPDSo63a5euabhdZDFa1nSdrA4b3SVnaqu1EatlPt192H3oCd/q6SEGdqu26qvfICvj92EvPwsx7XvjL
        8ba8/JwyAvOD8w+NR23y36trnr209d/ooi2BMCTQB6qCHfvZpI77qU/9y/L1ndqtY1WzpWv43qtu85rl
        Zxe2D7lnmLNqO0u1r3zWcHYqpQ3bZkFd1Xae4Zxrwm/Rnu7hwr2MTlTtpqVc7nC7W0YxZpXDXVdGAape
        eoqpVO33ktQPyJkCeaDMAsd5C/8ylVDd4weDtRzrjNpwsAn0gW6BHpus4z60W/vRq0VxD51e/hjPeT5V
        LPZapeZ4SpxmtGD6+qxUnrdSe9g+AZC59apt5TPF2fA/uvDVsu204eEzi/auZzg8h91MXxPLVrRbVXWg
        zm5VRsvDUH7ueXg5fvVXS620z/RJRirOX58/kjVU3WtYPCkPmlW73/b+33AgdwIwn0Af6BjokTrumzht
        rVJ9jpv28OkPb3vfTVWKywK4nNw2vP+sfe7TModc7RmeNdw+UR1jmjn4Zaqm5Y/58Oz01Eh/5xIr8791
        9vNbrss0QdVu4ptn79/SPrJFMA8xVfudyND68L1i3ffKNrmcf58plbuP1cPc04YVImc91H3w2OvHUyRV
        6d5FUiRm1oNXTribbjv9sJyKe9mR8Nzln/z/3n/Wh8wavudgEugDXQP92qFvjHvq1Ws7tRt13R8+fc+2
        9132hLFlVEP66S1+6dTsQ1YyF57tRMPr0ltbVCQmwV2tas4f7Fk9r6wHyO9nwnt4Xf57dc1Q9TnOeojI
        HvNh2wy1Z7tc1X4iIyc5u/4nF74+Pm62alP5wLHXbXu/RTsU5pku3pPFgIselu698bVOv3eOpR22qY6f
        nSWlbXOCX7bf5ffhrYf+aO5q9Ty4DH+2ORI4a0Oqn3l8//yXy3txMAn0gf1SVGZSojVBXb2+m7IzoPos
        N6k6mezRMx8v264jvfThwSUT6SllQVMWNmWONNvcqjCO9J4+scQhKZHzx6t75I93hrnTO06o5o925r5n
        /VFPcZ1la8BX0wvD/d5vP/TH2/bUTyxat5BtbMNrMme8TKGeLGYcXpvT4aq2iyQ4h/PYqX9ftZ0YFurJ
        Pvlhm+ro2lnWmftPkaTqXrOssu2Q/gT6wH45NvVmL3ZbRWrfV5/lJlXnjm/ycJZIsA33aa9q1YeM7994
        UKjus6yz14+Oh2Ore1eqXvCkF52V/QmI4dGsE7MK5UyrVqpPpMeeXvBwq1seRj534l3lCYefPXHHlrbL
        ygK74b1Sia1qO5Gh9On2mYYZtslhNpPX87uSzyTrO1J3fXg07bzRnVkeH0yJVPKgkmmErKOo7sHBJdAH
        9tOQ+7J7xRfJw8HZh/6s7O1nu9uZB149d/vassO9O1EVUdnkkPtEAm+4/WwZCaMvLXEG+lB6kplTre65
        SHrxy8ybT0sFvOF9MvKQofjzL72w7bWJbHdbFIiReeBhz3gow/YZ9Uhv9/CVJ2c+RGVf9rwh6nnycDK8
        36IeeqrsTbdPKeFhm3w9GW3Icb7DrY2fevG2Ldevc4BK5v2n7zGRufdsa/vCyfc5PpWZBPrAfgr0hOzx
        u353vNe8en0Vs3r7yxSn2Y1Az8re4ftmSLpqu1PZpvXkxW8uDKZIOGW70Sq95Ep6qCl3Wr3HUCqrZcSi
        us8iOaymuuc8GdJfpRRuetVVb3sVm1jwNayJnp9r1W7ijsOv3dL+xLXflO1myajA9LRIFi6uU3Ewoy7T
        X0dOFVznPhw8An1gPwV6nHv0DeODVKrXVjHp7Ve99EWHtexGoMdw3vqZy98r221KhuAzhJ6ecLYx5Q9t
        FnulV5mpmZyXvqjXt4oMRSeo84CQ98j56PmeE+D5GtKTXma19jw5W3v6M5wn4ZTvf51ecs6Cz/z/cDX+
        MrIYMQVZqvuuYlgrPvv/q3YT+XlPt8/nX7WbZ3Jm+UR2JFTt5vnJhce23CMVAat2MCTQB6pVwHtZhsRn
        BfGq1u2l78Ycejxx/mtb3jdnllftmK06ArWSYFp00Msy8n4ZSVk22LPKP8PO1b1WlR729L0X9fiHh91k
        lKFqN8/3zj+45R7rPOwO1yF8b42jfDmYBPrAfqzlnjCfN8e9rJyuNmtO/uS9/3zmYS27sco9UnhluvBI
        iqRU7ZgvowzTP7+JrB3IqMfNWGyVHnu2sz118fHxPvbMj2fUI/Pomd7ISEDWSVTXritTBdPfX869r9pN
        DOevq21ri2Qh3PQ9Mu9dtZvn3hfeuOUe+ZyqdjAk0AeGxSUOkklPvKooNy/sdyvQI3u/sy83NeQtDlpP
        hp4zhJ/DVTKs/Mjpj+1KLYHdlkVp07+nWbRWtZsYLrzMA0HVbp5hcZicX77slsKJPPxMr9/I/89/q9oO
        ZdrgZhT9YX8Q6IXpf5AHzaxDXDICUIV55CGo+hzhVspQ9fTvadY8VO0mhnvoUximajfPuDjMoHztOv8+
        hqWB59U2yFTBuHLdtd9Wrjt7/cjCU/foSaAXZhUY2Y8Swhkqv1lV4qL6DOFWG5bXzSK9qt3EsOjOD88/
        XLZbZLgwLtXeqnbzDEvuTp9q+O6jfzY+TTBlfIfBP5G5/On7cTAI9MJ+KS6zrCx228TWtspunbYGqxr2
        uI9ceapsNzFcjJZdBVW7RXLd9H2WPXN+WnYzTN8jWxqfufSDpbcD7taxxuwtAr2wl1e6p8e96tnmm9ra
        VtmtLWuwqtRuT52Aye9q5qKz17xqGxlin/7dTm2Aqt0i2XI3fZ9fXPpO2W6ebBWsDgxaJEV60nNf5pAf
        +hHohb28MC6FZFYt9zo5PvVm1H2/78W3lZ8h7AXD899nHfuaRYEpZjPddt21IR8//uYt98mK/qrdItXh
        OJXst0+1wfxbFOQHm0Cf4fS1+vCNWy17wWetNp8n11T7yBPy6wb9Ovt0YTdlq9z072y25g13R+TY1ucu
        /3hLu3WKykxkv/v0vbJIrmq3SMr6DqsVpthPjoTNIrhsL8yCuHXL49KPQJ8hc1DT/5D2inXLvWYevQr0
        7C9f95z0rDWoPjvYK9JjTQGi6d/bFJxJRb7bD792XKZ2WIAmvnzqg+X9lpHe/vB+qdBXtV0kU1o5+e47
        5740DvAcoVu1gxDoM2T4aviPcq8Yz4nf6HGvUkwm8+5Vr37e/vJFbFdjP0hoV7+/s+SM+1X3jg8ND/jJ
        KEDVDjZJoM+xV4fdJ+VeqwIwq0qQr3OvbO2rPjPYi3J0a/V7PJQT1u44/JryHquY3gOfrWVVG9g0gT7H
        Xj6o5cwDr9rYIrd1trXtZnU42KkMvafsbPW7PJF59AzDV9evKievZZ477jzcrwofe5NAn6OaC+soDwen
        7vu98rWKvefsV5mHTtnb0zd64uevHx/3nn98/rG5ldhgvxDoC3QrMlPJcPsqgW7uHGDvEegLHJRe+rIU
        kgHYmwT6EvZTLz0r3y///BNrrVpfxFA7wN4l0JeQvZ/L1lC+1cb71G//nfHWtur1deX7twcWYO8S6Eva
        y/Xdh7LIbd1iMZWEuXlzgL1NoK8gQ85V4O01OykWMyTMAfYHgb6CLJDbD0Pv6xaLGcr3ar85wP4g0Fe0
        l0vCTkugV7Xbl6VnDrC/CPQ17NWDW6ZlUVyG3qvXFklZVwvgAPYXgb6mrgVn8rAizAH2H4G+A51CPQfR
        mC8H2L8E+g51CPV8D3rlAPubQN+AvXwq2zzZhpeV+9X3BMD+ItA3JMPV+2FLWyTIDa8D9CLQNyjD1nu5
        +EyG1vXIAXoS6DdB9qpnkVkVqrstW9BSttYcOUBvAv0m+vzJu25JsE9CXG8c4OAQ6Lsgwf7UxcfL8N2E
        BHj2j+d99MQBDiaBvosSthmOT/gmhKtwnie9/czR5/r0wC1sA2BCoN9iCfkE8yzqqQOwDIEOAA0IdABo
        QKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INAB
        oAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBA
        B4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0AD
        Ah0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4A
        DQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6
        ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ
        6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABo
        QKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INAB
        oAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBA
        B4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0AD
        Ah0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4A
        DQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6
        ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ
        6ADQgEAHgAYEOgA0INABoAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABo
        QKADQAMCHQAaEOgA0IBAB4AGBDoANCDQAaABgQ4ADQh0AGhAoANAAwIdABoQ6ADQgEAHgAYEOgA0INAB
        oAGBDgANCHQAaECgA0ADAh0AGhDoANCAQAeABgQ6ADQg0AGgAYEOAA0IdABoQKADQAMCHQAaEOgA0IBA
        B4B97/dH/w+fY40W1T6XTgAAAABJRU5ErkJggg==
</value>
  </data>
</root>